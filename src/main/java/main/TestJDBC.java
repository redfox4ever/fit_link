package main;

import entities.Coach;
import entities.Niveau;
import entities.Regime;
import entities.Exercice;
import services.RegimeService;
import services.ExerciceService;
import connection.MyConnection;
import java.sql.SQLException;
import java.util.List;

public class TestJDBC {
    public static void main(String[] args) {
        // V√©rifie la connexion √† la base de donn√©es
        MyConnection.getInstance();

        // Initialisation des services
        RegimeService regimeService = new RegimeService();
        ExerciceService exerciceService = new ExerciceService();

        try {
            // √âtape 1 : Cr√©er un coach
            Coach coach = new Coach(1, "Expert en cardio", "homme", "1985-06-15");


// √âtape 2 : Cr√©er un r√©gime li√© au coach
            Regime regimeCardio = new Regime("R√©gime Cardio", "Am√©liore l'endurance cardiovasculaire.", "Hypocalorique");
            regimeCardio.setRefCoach(coach.getRefCoach()); // Associer le coach au r√©gime via sa r√©f√©rence
            regimeService.create(regimeCardio);
            System.out.println("‚úÖ R√©gime ajout√© avec succ√®s ! ID g√©n√©r√© : " + regimeCardio.getId());

// √âtape 3 : Ajouter des exercices au r√©gime
            Exercice exercice4 = new Exercice(
                    "Squats",
                    "Course √† pied pour am√©liorer la r√©sistance cardiovasculaire.",
                    300,
                    45,
                    Niveau.MOYEN,
                    "Cardio",
                    regimeCardio
            );
            Exercice exercice5 = new Exercice(
                    "Elliptical Trainer",
                    "P√©daler pour renforcer les jambes et am√©liorer l'endurance.",
                    250,
                    60,
                    Niveau.FACILE,
                    "Cardio",
                    regimeCardio
            );
            Exercice exercice6 = new Exercice(
                    "Treadmill",
                    "Nager pour travailler l'ensemble du corps tout en am√©liorant la cardio.",
                    400,
                    30,
                    Niveau.DIFFICILE,
                    "Cardio",
                    regimeCardio
            );

            exerciceService.create(exercice4);
            System.out.println("‚úÖ Exercice '" + exercice4.getNom() + "' ajout√© avec succ√®s !");
            exerciceService.create(exercice5);
            System.out.println("‚úÖ Exercice '" + exercice5.getNom() + "' ajout√© avec succ√®s !");
            exerciceService.create(exercice6);
            System.out.println("‚úÖ Exercice '" + exercice6.getNom() + "' ajout√© avec succ√®s !");

            // √âtape 4 : Mettre √† jour un r√©gime
            regimeCardio.setNom("Nouveau R√©gime Cardio"); // Modifier le nom du r√©gime
            regimeCardio.setDescription("Nouvelle description du r√©gime."); // Modifier la description
            regimeService.update(regimeCardio);
            System.out.println("‚úÖ R√©gime mis √† jour avec succ√®s.");

            // √âtape 5 : Mettre √† jour un exercice
            exercice4.setNom("Nouveaux Squats"); // Modifier le nom de l'exercice
            exercice4.setDescription("Description mise √† jour pour les squats."); // Modifier la description
            exercice4.setCaloriesBrulees(350); // Augmenter les calories br√ªl√©es
            exerciceService.update(exercice4);
            System.out.println("‚úÖ Exercice '" + exercice4.getNom() + "' mis √† jour avec succ√®s.");

            // √âtape 6 : Supprimer un r√©gime
            Regime regimeASupprimer = new Regime();
            regimeASupprimer.setId(2); // Sp√©cifiez l'ID du r√©gime √† supprimer
            regimeService.delete(regimeASupprimer);
            System.out.println("‚úÖ R√©gime avec ID=" + regimeASupprimer.getId() + " supprim√© avec succ√®s.");

            // √âtape 7 : Supprimer un exercice
            Exercice exerciceASupprimer = new Exercice();
            exerciceASupprimer.setId(29); // Sp√©cifiez l'ID du r√©gime √† supprimer
            exerciceService.delete(exerciceASupprimer);
            System.out.println("‚úÖ Exercice avec ID=" + exerciceASupprimer.getid() + " supprim√© avec succ√®s.");

            // √âtape 8 : R√©cup√©rer et afficher tous les r√©gimes avec leurs exercices associ√©s
            List<Regime> regimes = regimeService.readAll();
            System.out.println("\nüìå Liste des r√©gimes enregistr√©s :");
            for (Regime r : regimes) {
                System.out.println(r);
                if (r.getCoach() != null) {
                    System.out.println("  Coach : " + r.getCoach().getDescription());
                } else {
                    System.out.println("  Aucun coach associ√©.");
                }
                List<Exercice> exercices = r.getExercices();
                if (!exercices.isEmpty()) {
                    System.out.println("  üìã Exercices associ√©s :");
                    for (Exercice e : exercices) {
                        System.out.println("    - " + e);
                    }
                } else {
                    System.out.println("  Aucun exercice associ√©.");
                }
            }

        } catch (SQLException e) {
            System.err.println("‚ùå Erreur SQL : " + e.getMessage());
        }
    }
}